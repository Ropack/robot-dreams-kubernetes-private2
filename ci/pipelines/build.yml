# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  registryName: 'robotdreamskubernetes.azurecr.io'

steps:
- task: DockerCompose@1
  inputs:
    containerregistrytype: 'Azure Container Registry'
    dockerComposeFile: 'src/docker-compose.yml'
    additionalDockerComposeFiles: '../ci/docker-compose.ci.yml'
    projectName: 'northwindstore'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'up'
    arguments: '--build --force-recreate -d'

- task: Docker@2
  displayName: Build Unit tests
  inputs:
    command: 'build'
    Dockerfile: 'src/NorthwindStore.Tests.UnitTests/Dockerfile'
    buildContext: 'src'
    tags: '$(Build.BuildId)'
    arguments: '-t northwindstoretestsunittests:$(Build.BuildId)'

- task: Docker@2
  displayName: Run Unit tests
  inputs:
    command: 'run'
    arguments: '--rm --pull never -v $(Build.ArtifactStagingDirectory)/testresults:/src/testresults northwindstoretestsunittests:$(Build.BuildId)'
  continueOnError: true


- task: Docker@2
  displayName: Build Integration tests
  inputs:
    command: 'build'
    Dockerfile: 'src/NorthwindStore.Tests.IntegrationTests/Dockerfile'
    buildContext: 'src'
    tags: '$(Build.BuildId)'
    arguments: '-t northwindstoretestsintegrationtests:$(Build.BuildId)'

- task: Docker@2
  displayName: Run Integration tests
  inputs:
    command: 'run'
    arguments: '--rm --pull never -v $(Build.ArtifactStagingDirectory)/testresults:/src/testresults -e "ConnectionStrings__DB=Data Source=tcp:northwindstore.db,1433; Initial Catalog=Northwind; User ID=sa; Password=DevPass_1" --network northwindstore-dev  northwindstoretestsintegrationtests:$(Build.BuildId)'
  continueOnError: true

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '*.trx'
    searchFolder: '$(Build.ArtifactStagingDirectory)/testresults'
    failTaskOnFailedTests: true

- task: DockerCompose@1
  inputs:
    containerregistrytype: 'Azure Container Registry'
    dockerComposeFile: 'src/docker-compose.yml'
    additionalDockerComposeFiles: '../ci/docker-compose.ci.yml'
    projectName: 'northwindstore'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'down'
  condition: always()

- task: Docker@2
  inputs:
    command: 'tag'
    arguments: 'northwindstoreapp:latest $(registryName)/northwindstore/app:latest'
    addPipelineData: false
    addBaseImageData: false

- task: Docker@2
  inputs:
    command: 'tag'
    arguments: 'northwindstoreapp:latest $(registryName)/northwindstore/app:$(Build.BuildId)'
    addPipelineData: false
    addBaseImageData: false
- task: Docker@2
  inputs:
    containerRegistry: 'Robot dream container registry'
    repository: 'northwindstore/app'
    command: 'push'
    tags: |
      $(Build.BuildId)
      latest
      
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'ci/app'
    ArtifactName: 'app'
    publishLocation: 'Container'